{"id":"src/pmlib/webgl1/util/shader.js","dependencies":[{"name":"/project/sandbox/package.json","includedInParent":true,"mtime":1687770103677}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Shader = void 0;\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar Shader = /*#__PURE__*/_createClass(function Shader() {\n  _classCallCheck(this, Shader);\n});\nexports.Shader = Shader;\n_defineProperty(Shader, \"vertextSource\", /*glsl*/\"#version 300 es\\n    in mediump vec3 pos;\\n    in mediump vec4 boneIds;\\n    in mediump vec4 weights;\\n    uniform sampler2D boneMatrixImage;\\n    out vec3 out_pos;\\n\\n    mat4 getBoneMatrix(int boneNdx) {\\n        return mat4(\\n            texelFetch(boneMatrixImage, ivec2(0, boneNdx), 0),\\n            texelFetch(boneMatrixImage, ivec2(1, boneNdx), 0),\\n            texelFetch(boneMatrixImage, ivec2(2, boneNdx), 0),\\n            texelFetch(boneMatrixImage, ivec2(3, boneNdx), 0));\\n    }\\n\\n    void main(void) {\\n        vec4 totalPosition = vec4(0.0);\\n        for(int i=0; i<4; i++)\\n        {\\n            int boneId = int(boneIds[i]);\\n            vec4 localPosition = getBoneMatrix(boneId) * vec4(pos,1.0);\\n            totalPosition += localPosition*weights[i];\\n        }\\n        out_pos = totalPosition.xyz;\\n    }\\n    \");\n_defineProperty(Shader, \"fragmentSource\", /*glsl*/\"#version 300 es\\n    precision mediump float;\\n    void main() {\\n    }\\n    \");"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":14,"column":4},"source":"src/pmlib/webgl1/util/shader.js","original":{"line":1,"column":6},"name":"Shader"},{"generated":{"line":14,"column":10},"source":"src/pmlib/webgl1/util/shader.js","original":{"line":1,"column":12}},{"generated":{"line":14,"column":26},"source":"src/pmlib/webgl1/util/shader.js","original":{"line":1,"column":12},"name":"_createClass"},{"generated":{"line":14,"column":38},"source":"src/pmlib/webgl1/util/shader.js","original":{"line":1,"column":12}},{"generated":{"line":14,"column":48},"source":"src/pmlib/webgl1/util/shader.js","original":{"line":1,"column":12},"name":"Shader"},{"generated":{"line":14,"column":55},"source":"src/pmlib/webgl1/util/shader.js","original":{"line":1,"column":12}},{"generated":{"line":15,"column":2},"source":"src/pmlib/webgl1/util/shader.js","original":{"line":1,"column":12},"name":"_classCallCheck"},{"generated":{"line":15,"column":17},"source":"src/pmlib/webgl1/util/shader.js","original":{"line":1,"column":12}},{"generated":{"line":15,"column":24},"source":"src/pmlib/webgl1/util/shader.js","original":{"line":1,"column":12},"name":"Shader"},{"generated":{"line":15,"column":30},"source":"src/pmlib/webgl1/util/shader.js","original":{"line":1,"column":12}},{"generated":{"line":16,"column":0},"source":"src/pmlib/webgl1/util/shader.js","original":{"line":1,"column":12}},{"generated":{"line":17,"column":0},"source":"src/pmlib/webgl1/util/shader.js","original":{"line":1,"column":12},"name":"exports"},{"generated":{"line":17,"column":7},"source":"src/pmlib/webgl1/util/shader.js","original":{"line":1,"column":12}},{"generated":{"line":17,"column":8},"source":"src/pmlib/webgl1/util/shader.js","original":{"line":1,"column":12},"name":"Shader"},{"generated":{"line":17,"column":14},"source":"src/pmlib/webgl1/util/shader.js","original":{"line":1,"column":12}},{"generated":{"line":17,"column":17},"source":"src/pmlib/webgl1/util/shader.js","original":{"line":1,"column":12},"name":"Shader"},{"generated":{"line":17,"column":23},"source":"src/pmlib/webgl1/util/shader.js","original":{"line":1,"column":12}},{"generated":{"line":18,"column":0},"source":"src/pmlib/webgl1/util/shader.js","original":{"line":1,"column":12},"name":"_defineProperty"},{"generated":{"line":18,"column":15},"source":"src/pmlib/webgl1/util/shader.js","original":{"line":1,"column":12}},{"generated":{"line":18,"column":16},"source":"src/pmlib/webgl1/util/shader.js","original":{"line":1,"column":6},"name":"Shader"},{"generated":{"line":18,"column":22},"source":"src/pmlib/webgl1/util/shader.js","original":{"line":1,"column":12}},{"generated":{"line":18,"column":41},"source":"src/pmlib/webgl1/util/shader.js","original":{"line":2,"column":25}},{"generated":{"line":19,"column":0},"source":"src/pmlib/webgl1/util/shader.js","original":{"line":2,"column":25},"name":"_defineProperty"},{"generated":{"line":19,"column":15},"source":"src/pmlib/webgl1/util/shader.js","original":{"line":2,"column":25}},{"generated":{"line":19,"column":16},"source":"src/pmlib/webgl1/util/shader.js","original":{"line":1,"column":6},"name":"Shader"},{"generated":{"line":19,"column":22},"source":"src/pmlib/webgl1/util/shader.js","original":{"line":1,"column":12}},{"generated":{"line":19,"column":42},"source":"src/pmlib/webgl1/util/shader.js","original":{"line":28,"column":26}}],"sources":{"src/pmlib/webgl1/util/shader.js":"class Shader {\r\n  static vertextSource = /*glsl*/ `#version 300 es\r\n    in mediump vec3 pos;\r\n    in mediump vec4 boneIds;\r\n    in mediump vec4 weights;\r\n    uniform sampler2D boneMatrixImage;\r\n    out vec3 out_pos;\r\n\r\n    mat4 getBoneMatrix(int boneNdx) {\r\n        return mat4(\r\n            texelFetch(boneMatrixImage, ivec2(0, boneNdx), 0),\r\n            texelFetch(boneMatrixImage, ivec2(1, boneNdx), 0),\r\n            texelFetch(boneMatrixImage, ivec2(2, boneNdx), 0),\r\n            texelFetch(boneMatrixImage, ivec2(3, boneNdx), 0));\r\n    }\r\n\r\n    void main(void) {\r\n        vec4 totalPosition = vec4(0.0);\r\n        for(int i=0; i<4; i++)\r\n        {\r\n            int boneId = int(boneIds[i]);\r\n            vec4 localPosition = getBoneMatrix(boneId) * vec4(pos,1.0);\r\n            totalPosition += localPosition*weights[i];\r\n        }\r\n        out_pos = totalPosition.xyz;\r\n    }\r\n    `;\r\n  static fragmentSource = /*glsl*/ `#version 300 es\r\n    precision mediump float;\r\n    void main() {\r\n    }\r\n    `;\r\n}\r\nexport { Shader };\r\n"},"lineCount":null}},"error":null,"hash":"06bf9993191235f51d2e83585881b16b","cacheData":{"env":{}}}